swagger: '2.0'
info:
  title: Bus Station Management System API
  version: 1.0.0
  description: |
    ### This is a Swagger UI for our Bus Station Management System API
    ### Error handling
    Errors are presented using the HTTP status codes 400-599. The response includes a more detailed explanation about the error in the body.
    ```
    {
      "error": "Cleartext explanation of the error that occurred"
    }
    ```
    ### Generic API errors
    These error responses can be returned by any of the described endpoints.

    | HTTP status  |  Description |
    |---|---|
    | 400| Bad input parameters or invalid request. More information can be found in the response body.
    | 401| The consumer does not have access to the requested resource or the provided token is not valid.
    | 404| The requested resource cannot be found or the user does not have access to the resource.
    | 5XX| A server error has occurred while processing the request.
paths:
  /routes:
    get:
      tags:
        - routes
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
          examples:
            List of routes:
              value:
                - id: 1
                  departure_location: City A
                  destination: City B
                  departure_time: '01.01.2023 08:00'
                - id: 2
                  departure_location: City B
                  destination: City C
                  departure_time: '02.03.2023 10:30'
          description: Returns a list of routes
      summary: Get a list of all routes
      description: Returns a list of all routes in API
    post:
      requestBody:
        description: A new route to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutePost'
        required: true
      tags:
        - new-route
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Add a new route
        '400':
          description: One or all params are missing
      summary: Creates a route
      description: Creates a new route
      parameters:
        - name: id
          in: path
          required: false
          type: integer
          description: ID of the route
        - name: departure_location
          in: formData
          type: string
          required: true
          description: Departure Location
        - name: destination
          in: formData
          type: string
          required: true
          description: Destination
        - name: departure_time
          in: formData
          type: string
          required: true
          description: Departure Time in dd.mm.yyyy hh:min format (e.g., 01.01.2023 08:00)
  '/routes/{id}':
    get:
      tags:
        - routes
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID of the route
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          examples:
            Full details of a given id route:
              value:
                id: 1
                departure_location: City A
                destination: City B
                departure_time: '01.01.2023 08:00'
          description: Returns full details of a given id route
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Route not found:
                  value: Route with ID {id} not found in routes array.
          description: Route was not found in routes array
      operationId: id
      summary: Get full details of a route
      description: Returns full details of a given id route
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRoute'
        required: true
      tags:
        - delete-route
      responses:
        '204':
          description: Route deleted successfully
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Route not found
      summary: Delete a route
      description: Delete a route by given id
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID of the route
    put:
      requestBody:
        description: Updated route details
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
        required: true
      tags:
        - update-route
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Update a route
        '400':
          description: One or all params are missing
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Route not found
      summary: Update a route
      description: Update a route by given id
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID of the route
        - name: departure_location
          in: formData
          type: string
          required: true
          description: Departure Location
        - name: destination
          in: formData
          type: string
          required: true
          description: Destination
        - name: departure_time
          in: formData
          type: string
          required: true
          description: Departure Time in dd.mm.yyyy hh:min format (e.g., 01.01.2023 08:00)
components:
  schemas:
    Route:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Route ID
        departure_location:
          type: string
          description: Departure Location
        destination:
          type: string
          description: Destination
        departure_time:
          type: string
          description: Departure Time in dd.mm.yyyy hh:min format (e.g., 01.01.2023 08:00)
    Error:
      title: Root Type for error
      type: object
      properties:
        error:
          type: string
      example:
        error: Error message.
    DeleteRoute:
      type: object
      properties:
        id:
          type: integer
          description: ID of the route to be deleted
      example:
        id: 1
    RoutePost:
      type: object
      properties:
        id:
          type: integer
          description: Route ID
        departure_location:
          type: string
          description: Departure Location
        destination:
          type: string
          description: Destination
        departure_time:
          type: string
          description: Departure Time in dd.mm.yyyy hh:min format (e.g., 01.01.2023 08:00)
      example:
        id: 1
        departure_location: City A
        destination: City B
        departure_time: '01.01.2023 08:00'
